"""
Django settings for MxShop project.

Generated by 'django-admin startproject' using Django 2.2.19.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, BASE_DIR)
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))  # 将apps加入到搜索路径
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '00#m)ey$jnvxj&tpi%g%rzs1&)pp5hjh+yjvg5(&k$#-=^q54_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# 因为用户模型继承自django自带的 所以这里要配置一下
AUTH_USER_MODEL = 'users.UserProfile'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 富文本
    'DjangoUeditor',

    'goods.apps.GoodsConfig',
    'trade.apps.TradeConfig',
    'user_operation.apps.UserOperationConfig',
    'users.apps.UsersConfig',
    # 'users',

    'crispy_forms',  # 配合xadmin后台的前端样式渲染
    'xadmin',  # xadmin后台

    'rest_framework',

    'django_filters',  # 第三方过滤
    'corsheaders',  # 解决跨域

    'rest_framework.authtoken',  # 基于drf的token
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # 解决跨域
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True  # 解决跨域

ROOT_URLCONF = 'MxShop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MxShop.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mxshop',
        'USER': 'root',
        'PASSWORD': '123456',
        # 'HOST': '192.168.56.101',  # 公司
        # 'PORT': 3306,
        'HOST': '192.168.0.158',   # 家
        'PORT': 3307,
        'OPTIONS': {'init_command': 'SET default_storage_engine=INNODB;'}  # 修改mysql默认引擎
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

'''
https://blog.csdn.net/weixin_43835542/article/details/104007823
注意：生产模式 Debug=False，Django不会找静态文件的位置
如果使用，请在项目文件下的终端输入 python manage.py collectstatic 
项目下，所有的静态文件都会合并在 STATIC_ROOT 下的 static 里面
'''
STATIC_URL = '/static/'
# 执行python manage.py collectstatic命令后会将项目中的静态文件收集到该目录下面来（所以不应该在该目录下面放置自己的一些静态文件，因为会覆盖掉）
STATIC_ROOT = os.path.join(BASE_DIR, 'static')



'''
MEDIA_ROOT:
        在官方文档中，MEDIA_ROOT是保存用户上传文件的目录的绝对文件系统路径。因为是绝对路径，所以使用os.path.join方法生产出MEDIA_ROOT。
MEDIA_URL：
        同样，官方文档中给出了详细的介绍。处理由MEDIA_ROOT提供的媒体文件的URL，用于管理存储的文件。如果设置为非空值，它必须以斜杠结尾。
'''
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

REST_FRAMEWORK = {
    # drf接口文档配置
    # 'DEFAULT_SCHEMA_CLASS':'rest_framework.schemas.AutoSchema',

    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',  # drf源码里默认 为了兼容drf自带的页面认证方式
        'rest_framework.authentication.SessionAuthentication',  # drf源码里默认 为了兼容drf自带的页面认证方式

        # djangorestframework-simplejwt库的
        # 尽量在view里单独配置 如果前端在一些不需要登录就可以看到数据接口上传了token 恰好token过期了 那不需要登录就可以看到的数据接口 就会报错
        # 'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],

    # 全局配置异常模块
    'EXCEPTION_HANDLER': 'apps.utils.exception.custom_exception_handler',
    # 修改默认返回JSON的renderer的类
    'DEFAULT_RENDERER_CLASSES': (
        'apps.utils.rendererresponse.customrenderer',
    ),
}

# djangorestframework-simplejwt库的配置
from datetime import timedelta

# jwt三个部分：第一段header(头部)  第二段payload(载荷)  第三段signature(签证)部分
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),  # 配置过期时间
    'AUTH_HEADER_TYPES': ('JWT',),  # 定义header中Authorization对应值的开头
    'USER_ID_FIELD': 'username',  # 修改jwt第三部分中用户的信息字段 必须是表中存在的 源码rest_framework_simplejwt.settings中默认'USER_ID_FIELD': 'id'表的id 我这里修改为表中的username字段
    'USER_ID_CLAIM': 'username',  # 同上  这里的username是加密中的key 上边是对应的value
}

# 自定义的用户登录效验
AUTHENTICATION_BACKENDS = (
    'users.authentication.CustomBackend',
)


# 手机号码正则表达式
# 手机号都为11位，且以1开头，第二位一般为3、5、6、7、8、9 ，剩下九位任意数字
# REGRX_MOBILE = "^1[358]\d{9}$|^147\d{8}$|^176\d{8}$"
REGRX_MOBILE = "^1[3456789]\d{9}$"


# 短信apikey
APIKEY = ''